openapi: 3.0.0
info:
  title: Business Card API
  description: API for managing business cards and services.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local development server
paths:
  /:
    get:
      summary: Welcome message
      description: Returns a welcome message for the API.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                message: "Welcome to the Business Card API"

  /auth/login:
    post:
      summary: User login
      description: Authenticates a user and returns a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              example:
                username: "user123"
                password: "password123"
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              example:
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: Invalid credentials
          content:
            application/json:
              example:
                error: "Invalid credentials"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "Internal server error"

  /cards:
    get:
      summary: List business cards
      description: Returns a paginated list of business cards.
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                cards:
                  - name: "John Doe"
                    email: "john@example.com"
                    phone: "1234567890"
                    company: "ABC Corp"
                    title: "CEO"
                page: 1
                totalPages: 5
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "Error fetching cards"

  /cards/add:
    get:
      summary: Get services for adding a card
      description: Returns a list of services to be selected when adding a business card.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                services:
                  - _id: "64f1a2b3c9e77b001f8e8e8e"
                    name: "Service 1"
                    description: "Description of Service 1"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "Error fetching services for card form"

  /cards/upload:
    post:
      summary: Extract metadata from a business card
      description: Extracts metadata from an uploaded business card image and text.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                text:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                metadata: "Extracted metadata"
        '400':
          description: No file uploaded
          content:
            application/json:
              example:
                error: "No file uploaded."
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "Error extracting metadata"

  /cards/save:
    post:
      summary: Save a business card
      description: Saves a new business card to the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                company:
                  type: string
                title:
                  type: string
                selectedServices:
                  type: array
                  items:
                    type: string
              example:
                name: "Jane Doe"
                email: "jane@example.com"
                phone: "0987654321"
                company: "XYZ Corp"
                title: "CTO"
                selectedServices: ["64f1a2b3c9e77b001f8e8e8e"]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                message: "Card saved successfully"
                card:
                  name: "Jane Doe"
                  email: "jane@example.com"
                  phone: "0987654321"
                  company: "XYZ Corp"
                  title: "CTO"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "Error saving card"

  /services:
    get:
      summary: List services
      description: Returns a list of available services.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                services:
                  - _id: "64f1a2b3c9e77b001f8e8e8e"
                    name: "Service 1"
                    description: "Description of Service 1"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "Error fetching services"

  /services/save:
    post:
      summary: Save selected services
      description: Saves the selected services for a user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selectedServices:
                  type: array
                  items:
                    type: string
              example:
                selectedServices: ["64f1a2b3c9e77b001f8e8e8e"]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                message: "Services saved successfully"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "Error saving services"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - BearerAuth: []
